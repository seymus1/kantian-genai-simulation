import numpy as np, matplotlib.pyplot as pltnp.random.seed(42)scores = np.random.normal(4.1, 0.27, 10000)x = np.linspace(1, 5, 1000)f = lambda x: np.sin(np.pi * (x - 1) / 4)df = lambda x: (np.pi / 4) * np.cos(np.pi * (x - 1) / 4)plt.figure(figsize=(10, 6))plt.hist(scores, bins=50, density=True, alpha=0.6, color='skyblue', label='Monte Carlo Distribution')plt.plot(x, f(x), 'darkred', lw=2.2, label=r'Kantian Curve: $f(x)=\sin\left(\frac{\pi(x-1)}{4}\right)$')for x0, c in zip([2, 3, 4], ['darkgreen', 'darkorange', 'purple']):    y0, m = f(x0), df(x0)    plt.plot(x, m*(x - x0) + y0, '--', lw=1.5, color=c, label=f'Tangent at x={x0}')plt.title("Monte Carlo vs. Kantian Continuity", fontsize=14)plt.xlabel("Simulated Success Score (Likert 1–5)", fontsize=12)plt.ylabel("Density / Value", fontsize=12)plt.legend(); plt.grid(True); plt.tight_layout(); plt.show()